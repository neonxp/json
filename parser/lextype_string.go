// Code generated by "stringer -type=lexType"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[lEOF-0]
	_ = x[lError-1]
	_ = x[lObjectStart-2]
	_ = x[lObjectEnd-3]
	_ = x[lObjectKey-4]
	_ = x[lObjectValue-5]
	_ = x[lArrayStart-6]
	_ = x[lArrayEnd-7]
	_ = x[lString-8]
	_ = x[lNumber-9]
	_ = x[lBoolean-10]
	_ = x[lNull-11]
}

const _lexType_name = "lEOFlErrorlObjectStartlObjectEndlObjectKeylObjectValuelArrayStartlArrayEndlStringlNumberlBooleanlNull"

var _lexType_index = [...]uint8{0, 4, 10, 22, 32, 42, 54, 65, 74, 81, 88, 96, 101}

func (i lexType) String() string {
	if i < 0 || i >= lexType(len(_lexType_index)-1) {
		return "lexType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _lexType_name[_lexType_index[i]:_lexType_index[i+1]]
}
